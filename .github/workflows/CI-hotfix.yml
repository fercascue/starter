name: Continuous Integration for Hotfix (CI)
on:
  pull_request:
    types: 
      - closed
    branches:
      - main
  push:
    branches:
      #- main
      - "hotfix*"
      #- develop 
      
jobs:
  sample-script:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: script run ${{ github.repository }} 
       id: Changelog
       run: | #sh ./.github/workflows/entrypoint.sh
          git clone --quiet https://github.com/$REPO &> /dev/null

          git config --global --add safe.directory /github/workspace

          tag=$(git tag --sort version:refname | tail -n 2 | head -n 1)
          changelog=$(git log --oneline --no-decorate)

          echo $changelog

          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A' - }"
          changelog=" - ${changelog//$'\r'/'%0D'}"

          echo "::set-output name=changelog::$changelog" 
       env:
         REPO: ${{ github.repository }} 
     - name: Print result
       run: echo " Print ${{ steps.Changelog.outputs.changelog }} "
       
  build-project:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest
    steps:
     - name: Checking out project from ${{ github.ref_name }} for the event ${{ github.event_name }}
       uses: actions/checkout@v2
     - name: Setup node version ${{ matrix.node-version }}
       uses: actions/setup-node@v1
       with:
          node-version: 16
     - name: Cache node modules
       id: cache-npm
       uses: actions/cache@v3
       env:
         cache-name: cache-node-modules
       with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

     - name: Running node continuous integration
       run: npm ci
     - name: Building node 
       run: npm run build --if-present     
     - name: Linting source code 
       run: npm run lint

  check-project:
    #if: ${{ github.event_name == 'push' }} || ${{ github.event_name == 'pull_request' }}
    needs: build-project
    runs-on: ubuntu-latest
    steps:
     - name: Validating project from ${{ github.head_ref }} ${{ github.base_ref }} ${{ github.head_ref }}
       run: echo validating del proyecto
     #- run: echo "'${{ github.ref_name }}' was pushed by '${{ github.event.pusher.name }}'"
     #- run: echo " run number '${{ github.run_number }}' "  
     #- run: echo " event name '${{ github.event_name }}' " 
     #- run: echo " base ref '${{ github.base_ref }}' " 
     #- run: echo " head ref '${{ github.head_ref }}' " 
  
  deploy-hotfix-to-pro:
    if: ${{ github.event_name == 'pull_request' }}
    needs: check-project
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      stage: pro

  generate-hotfix-release:
    if: ${{ github.event_name == 'pull_request' }}
    needs: check-project
    runs-on: ubuntu-latest
    steps:
     - name: Generate hotfix release of project from ${{ github.head_ref }} #${{ github.base_ref }} ${{ github.head_ref }}
       run: echo Generate proyect hotfix release    


  #  steps:
  #   - name: Deploy release of project from ${{ github.head_ref }} #${{ github.base_ref }} ${{ github.head_ref }}
  #     run: echo Deploy proyect release
  
 
    #runs-on: ubuntu-latest
    #steps:
    # - name: Deploy project from ${{ github.head_ref }} to PRO ${{ github.base_ref }} ${{ github.head_ref }}
    #   run: echo Deploy del proyecto 
      